name: C CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get install -y build-essential ruby-full
        sudo gem install --no-document fpm
      

    - name: Build
      run: make

    - name: Set release tag and name
      env:
        RELEASE_TAG: ${{ env.RELEASE_TAG }}
        RELEASE_NAME: ${{ env.RELEASE_NAME }} 
      run: |
        echo "RELEASE_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
        echo "RELEASE_NAME=${RELEASE_NAME}" >> $GITHUB_ENV
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /home/runner/work/rmi4utils/rmi4utils/rmi4update/rmi4update
        asset_name: rmi4update_x86-64
        asset_content_type: application/octet-stream

    - name: Upload Release Asset2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /home/runner/work/rmi4utils/rmi4utils/rmihidtool/rmihidtool
        asset_name: rmihidtool_x86-64
        asset_content_type: application/octet-stream

    - name: Set version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

    - name: Build deb package
      run: |
        fpm \
          -s dir \
          -t deb \
          -n rmi4utils \
          -m "Vincent Huang" \
          --vendor "Synaptics" \
          --url "https://github.com/vhuag/rmi4utils" \
          --license "Apache-2.0" \
          -v $VERSION \
          --description "Synaptics RMI4 update tool." \
          ./rmi4update/rmi4update=/usr/bin/rmi4update \
          ./rmihidtool/rmihidtool=/usr/bin/rmihidtool
    
    - name: Upload deb package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rmi4utils_${{ env.VERSION }}_amd64.deb
        asset_name: rmi4utils_${{ env.VERSION }}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package
    outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
  
  build_arm:
    runs-on: ubuntu-latest
    needs: build
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y build-essential g++-arm-linux-gnueabi ruby-full
        sudo gem install --no-document fpm
      
    - name: Build
      env:
        CC: arm-linux-gnueabi-gcc
        CXX: arm-linux-gnueabi-g++
        AR: arm-linux-gnueabi-ar
      run: make
      
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }}
        asset_path: /home/runner/work/rmi4utils/rmi4utils/rmi4update/rmi4update
        asset_name: rmi4update_arm
        asset_content_type: application/octet-stream
      
    - name: Upload Release Asset2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }}
        asset_path: /home/runner/work/rmi4utils/rmi4utils/rmihidtool/rmihidtool
        asset_name: rmihidtool_arm
        asset_content_type: application/octet-stream

    - name: Set version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

    - name: Build deb package
      run: |
        fpm \
          -s dir \
          -t deb \
          -n rmi4utils \
          -a arm64 \
          -m "Vincent Huang" \
          --vendor "Synaptics" \
          --url "https://github.com/vhuag/rmi4utils" \
          --license "Apache-2.0" \
          -v $VERSION \
          --description "Synaptics RMI4 update tool." \
          ./rmi4update/rmi4update=/usr/bin/rmi4update \
          ./rmihidtool/rmihidtool=/usr/bin/rmihidtool

    - name: Build deb package arm32
      run: |
        fpm \
          -s dir \
          -t deb \
          -n rmi4utils \
          -a armhf \
          -m "Vincent Huang" \
          --vendor "Synaptics" \
          --url "https://github.com/vhuag/rmi4utils" \
          --license "Apache-2.0" \
          -v $VERSION \
          --description "Synaptics RMI4 update tool." \
          ./rmi4update/rmi4update=/usr/bin/rmi4update \
          ./rmihidtool/rmihidtool=/usr/bin/rmihidtool

    - name: Upload deb package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }}
        asset_path: ./rmi4utils_${{ env.VERSION }}_arm64.deb
        asset_name: rmi4utils_${{ env.VERSION }}_arm64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload deb package arm32
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }}
        asset_path: ./rmi4utils_${{ env.VERSION }}_armhf.deb
        asset_name: rmi4utils_${{ env.VERSION }}_armhf.deb
        asset_content_type: application/vnd.debian.binary-package

  build_i386:
    runs-on: ubuntu-latest
    needs: build
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y build-essential gcc-multilib g++-multilib ruby-full
        sudo gem install --no-document fpm
      
    - name: Build
      env:
        CC: gcc -m32
        CXX: g++ -m32
        AR: ar
      run: make
      
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }}
        asset_path: /home/runner/work/rmi4utils/rmi4utils/rmi4update/rmi4update
        asset_name: rmi4update_i386
        asset_content_type: application/octet-stream
      
    - name: Upload Release Asset2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }}
        asset_path: /home/runner/work/rmi4utils/rmi4utils/rmihidtool/rmihidtool
        asset_name: rmihidtool_i386
        asset_content_type: application/octet-stream

    - name: Set version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

    - name: Build deb package
      run: |
        fpm \
          -s dir \
          -t deb \
          -n rmi4utils \
          -a i386 \
          -m "Vincent Huang" \
          --vendor "Synaptics" \
          --url "https://github.com/vhuag/rmi4utils" \
          --license "Apache-2.0" \
          -v $VERSION \
          --description "Synaptics RMI4 update tool." \
          ./rmi4update/rmi4update=/usr/bin/rmi4update \
          ./rmihidtool/rmihidtool=/usr/bin/rmihidtool

    - name: Upload deb package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RMI4UTILS_TOKEN }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }}
        asset_path: ./rmi4utils_${{ env.VERSION }}_i386.deb
        asset_name: rmi4utils_${{ env.VERSION }}_i386.deb
        asset_content_type: application/vnd.debian.binary-package

  